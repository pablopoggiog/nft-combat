{"version":3,"sources":["theme/index.ts","components/Button/index.ts","components/Toggler/index.tsx","assets/squid.jpeg","App.tsx","hooks/useWallet.ts","constants/index.ts","reportWebVitals.ts","index.tsx"],"names":["lightTheme","body","text","toggleBorder","background","darkTheme","Button","styled","button","borderRadius","theme","Toggler","toggleTheme","Container","onClick","div","App","useState","setTheme","currentAccount","setCurrentAccount","connectWallet","a","window","ethereum","alert","request","method","accounts","console","log","networkVersion","checkIfWalletIsConnected","useCallback","length","account","useEffect","interactWithContract","callback","signer","ethers","providers","Web3Provider","getSigner","Contract","contract","abi","error","useWallet","Title","ImageContainer","Image","src","image","h1","img","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fa39846.chunk.js","sourcesContent":["export const lightTheme = {\r\n    body: \"#FFF\",\r\n    text: \"#363537\",\r\n    toggleBorder: \"lightGrey\",\r\n    background: \"#f1f1f1\",\r\n  };\r\n  \r\n  export const darkTheme = {\r\n    body: \"#363537\",\r\n    text: \"#FFF\",\r\n    toggleBorder: \"#6B8096\",\r\n    background: \"#363537\",\r\n  };","import styled from \"styled-components\";\r\n\r\ninterface ButtonProps {\r\n  borderRadius?: string;\r\n}\r\n\r\nexport const Button = styled.button<ButtonProps>`\r\n  border-radius: ${({ borderRadius }) => borderRadius ?? \"5px\"};\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  transition: 0.6s;\r\n  text-align: center;\r\n  justify-content: center;\r\n  border: 1px solid ${({ theme }) => theme.toggleBorder};\r\n  background: ${({ theme }) => theme.background};\r\n  color: ${({ theme }) => theme.text};\r\n  margin: 1em 0;\r\n\r\n  &:hover {\r\n    background-color: #3ca2c3;\r\n    transform: scale(1.01);\r\n  }\r\n\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n`;\r\n","import { FunctionComponent } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"src/components\";\r\n\r\ninterface TogglerProps {\r\n  toggleTheme: () => void;\r\n}\r\n\r\nexport const Toggler: FunctionComponent<TogglerProps> = ({ toggleTheme }) => (\r\n  <Container>\r\n    <Button onClick={toggleTheme}>Switch Theme</Button>\r\n  </Container>\r\n);\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  text-align: center;\r\n  justify-content: flex-end;\r\n  margin: 1em 0;\r\n  width: 7em;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/squid.5ba43e23.jpeg\";","import { useState } from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { useWallet } from \"src/hooks\";\nimport { lightTheme, darkTheme } from \"src/theme\";\nimport { Button, Toggler } from \"src/components\";\nimport image from \"src/assets/squid.jpeg\";\n\nconst App = () => {\n  const [theme, setTheme] = useState(\"dark\");\n\n  const themeToggler = () =>\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\n\n  const { currentAccount, connectWallet } = useWallet();\n\n  return (\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n      <Container>\n        <Toggler toggleTheme={themeToggler} />\n        <Title> Let the games begin!</Title>\n        <ImageContainer>\n          <Image src={image} />\n        </ImageContainer>\n        {!currentAccount && (\n          <Button onClick={connectWallet}>Connect your wallet!</Button>\n        )}\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n\nconst Container = styled.div`\n  text-align: center;\n  padding: 1em;\n  min-height: 100vh;\n  background-color: ${({ theme }) => theme.background};\n  box-sizing: border-box;\n  transition: 0.6s;\n`;\n\nconst Title = styled.h1`\n  text-align: center;\n  font-size: 2em;\n  padding: 1em;\n  color: ${({ theme }) => theme.text};\n  text-shadow: 1px 1px 20px ${({ theme }) => theme.text};\n`;\n\nconst ImageContainer = styled.div`\n  max-height: 400px;\n  overflow-y: hidden;\n  margin: 2em 0;\n  box-shadow: 1px 1px 20px ${({ theme }) => theme.text};\n  border-radius: 5px;\n`;\n\nconst Image = styled.img`\n  width: 100%;\n`;\n","import { useEffect, useState, useCallback } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport contract from \"src/utils/contract.json\";\r\nimport { CONTRACT_ADDRESS } from \"src/constants\";\r\n\r\nexport const useWallet = () => {\r\n  const [currentAccount, setCurrentAccount] = useState(\"\");\r\n\r\n  const interactWithContract = (\r\n    callback: (contract: ethers.Contract) => void\r\n  ) => {\r\n    try {\r\n      const { ethereum } = window;\r\n\r\n      if (ethereum) {\r\n        const provider = new ethers.providers.Web3Provider(ethereum);\r\n        const signer = provider.getSigner();\r\n        const connectedContract = new ethers.Contract(\r\n          CONTRACT_ADDRESS,\r\n          contract.abi,\r\n          signer\r\n        );\r\n\r\n        callback(connectedContract);\r\n      } else {\r\n        console.log(\"Ethereum object doesn't exist!\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const connectWallet = async () => {\r\n    try {\r\n      const { ethereum } = window;\r\n\r\n      if (!ethereum) {\r\n        alert(\"Get MetaMask!\");\r\n        return;\r\n      }\r\n\r\n      const accounts = await ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n\r\n      console.log(\"Connected\", accounts[0]);\r\n      setCurrentAccount(accounts[0]);\r\n\r\n      if (window.ethereum.networkVersion !== \"4\")\r\n        alert(\r\n          \"Hey â€” I see you're connected to mainnet but this only works on Rinkeby!\"\r\n        );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const checkIfWalletIsConnected = useCallback(async () => {\r\n    const { ethereum } = window;\r\n\r\n    if (!ethereum) {\r\n      console.log(\"Make sure you have metamask!\");\r\n      return;\r\n    } else {\r\n      console.log(\"We have the ethereum object\", ethereum);\r\n    }\r\n\r\n    const accounts = await ethereum.request({ method: \"eth_accounts\" });\r\n\r\n    if (accounts.length !== 0) {\r\n      const account = accounts[0];\r\n      console.log(\"Found an authorized account:\", account);\r\n      setCurrentAccount(account);\r\n    } else {\r\n      console.log(\"No authorized account found\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    checkIfWalletIsConnected();\r\n  }, [checkIfWalletIsConnected]);\r\n\r\n  return {\r\n    currentAccount,\r\n    connectWallet,\r\n    interactWithContract,\r\n  };\r\n};\r\n","export const OPENSEA_LINK =\r\n  \"https://testnets.opensea.io/collection/\";\r\nexport const CONTRACT_ADDRESS = \"0xe854B07fe39a6F41C0748B2A2C1d88210851eeA8\";","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}